#!/bin/bash

# Claude Code WSL環境セットアップスクリプト
# 作成日: 2025-06-17
# 説明: WSL環境でClaude Codeを設定するためのスクリプト

set -e

echo "=== Claude Code WSL環境セットアップ開始 ==="

# カラー定義
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# ログ関数
log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# 依存関係チェック関数
check_dependencies() {
    log_info "依存関係をチェック中..."
    
    # Node.js チェック
    if ! command -v node &> /dev/null; then
        log_error "Node.jsが見つかりません。Node.jsをインストールしてください。"
        echo "インストール方法: curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - && sudo apt-get install -y nodejs"
        exit 1
    else
        log_info "Node.js $(node --version) が見つかりました"
    fi
    
    # npm チェック
    if ! command -v npm &> /dev/null; then
        log_error "npmが見つかりません。"
        exit 1
    else
        log_info "npm $(npm --version) が見つかりました"
    fi
    
    # Python チェック
    if ! command -v python3 &> /dev/null; then
        log_error "Python3が見つかりません。Python3をインストールしてください。"
        exit 1
    else
        log_info "Python3 $(python3 --version) が見つかりました"
    fi
    
    # pip チェック
    if ! command -v pip3 &> /dev/null; then
        log_error "pip3が見つかりません。pipをインストールしてください。"
        exit 1
    else
        log_info "pip3 $(pip3 --version | cut -d' ' -f2) が見つかりました"
    fi
}

# Claude Code インストール
install_claude_code() {
    log_info "Claude Codeをインストール中..."
    
    if command -v claude &> /dev/null; then
        log_warn "Claude Codeは既にインストールされています。アップデートを実行します。"
        npm update -g @anthropic-ai/claude-code
    else
        npm install -g @anthropic-ai/claude-code
    fi
    
    log_info "Claude Codeのインストールが完了しました"
}

# uvパッケージインストール
install_uv() {
    log_info "uvパッケージをインストール中..."
    
    pip3 install --user uv
    
    log_info "uvパッケージのインストールが完了しました"
}

# 環境変数設定
setup_environment() {
    log_info "環境変数を設定中..."
    
    # .bashrcのバックアップ
    if [ -f ~/.bashrc ]; then
        cp ~/.bashrc ~/.bashrc.backup.$(date +%Y%m%d_%H%M%S)
        log_info ".bashrcのバックアップを作成しました"
    fi
    
    # Claude Code設定を.bashrcに追加
    cat >> ~/.bashrc << 'EOF'

# Claude Code 設定 (auto-generated by setup script)
export CLAUDE_CODE_USE_BEDROCK=1
export AWS_REGION='ap-northeast-1'
export ANTHROPIC_MODEL='apac.anthropic.claude-sonnet-4-20250514-v1:0'

# Claude Sonnet 4 レート制限対策
export CLAUDE_CODE_BATCH_SIZE=1
export CLAUDE_CODE_MAX_RETRIES=5
export CLAUDE_CODE_TIMEOUT=60000
export CLAUDE_CODE_REQUEST_DELAY=15000
EOF
    
    log_info "環境変数を.bashrcに追加しました"
}

# MCP サーバー設定
setup_mcp_servers() {
    log_info "MCPサーバーを設定中..."
    
    # 設定を反映
    source ~/.bashrc
    
    # AWS Documentation MCPサーバー
    log_info "AWS Documentation MCPサーバーを追加中..."
    claude mcp add aws-documentation-mcp-server uvx "awslabs.aws-documentation-mcp-server@latest" || {
        log_warn "AWS Documentation MCPサーバーの追加に失敗しました。後で手動で実行してください。"
    }
    
    # GitHub MCPサーバー用のトークン設定（ダミー値）
    log_info "GitHub MCPサーバー設定を準備中..."
    echo '' >> ~/.bashrc
    echo '# GitHub Token (replace with your actual token)' >> ~/.bashrc
    echo 'export GITHUB_TOKEN="your_github_token_here"' >> ~/.bashrc
    
    log_warn "重要: GitHubトークンを実際の値に置き換えてください:"
    log_warn "  nano ~/.bashrc"
    log_warn "  GITHUB_TOKEN の値を実際のトークンに変更"
    
    log_info "MCPサーバー設定が完了しました"
}

# 設定確認
verify_setup() {
    log_info "設定を確認中..."
    
    # 設定を反映
    source ~/.bashrc
    
    echo "=== インストール確認 ==="
    echo "Claude Code: $(command -v claude &> /dev/null && echo "インストール済み" || echo "未インストール")"
    echo "uv: $(command -v uv &> /dev/null && echo "インストール済み" || echo "未インストール")"
    
    echo ""
    echo "=== 環境変数確認 ==="
    echo "CLAUDE_CODE_USE_BEDROCK: ${CLAUDE_CODE_USE_BEDROCK:-未設定}"
    echo "ANTHROPIC_MODEL: ${ANTHROPIC_MODEL:-未設定}"
    echo "AWS_REGION: ${AWS_REGION:-未設定}"
    echo "GITHUB_TOKEN: ${GITHUB_TOKEN:+設定済み}"
    
    echo ""
    log_info "設定確認が完了しました"
}

# メイン実行
main() {
    check_dependencies
    install_claude_code
    install_uv
    setup_environment
    setup_mcp_servers
    verify_setup
    
    echo ""
    echo "=== セットアップ完了 ==="
    log_info "Claude Codeのセットアップが完了しました！"
    log_info "新しいターミナルを開くか、'source ~/.bashrc' を実行してから 'claude' コマンドでClaude Codeを起動してください"
    log_warn "GitHubトークンの設定を忘れずに行ってください"
}

# スクリプト実行
main "$@"